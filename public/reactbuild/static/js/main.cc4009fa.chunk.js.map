{"version":3,"sources":["assets/images/logo.svg","components/TopStreak.tsx","components/Score.tsx","components/Header.tsx","assets/images/bg-triangle.svg","assets/images/icon-rock.svg","assets/images/icon-paper.svg","assets/images/icon-scissors.svg","components/PickIcon.tsx","components/Game.tsx","components/EndResults.tsx","components/Results.tsx","assets/images/image-rules.svg","components/Rules.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TopStreak","topstreak","className","join","streak","Score","score","Header","src","logo","alt","PickIcon","pick","name","rockImg","paperImg","scissorsImg","Game","passUserPick","picks","shoot","e","currentTarget","getAttribute","forEach","p","data-value","onClick","triangle","EndResults","result","reset","playAgainText","Results","userPick","state","updateScore","useState","cpuPick","setCpuPick","setResult","display","setDisplay","useEffect","fetch","then","response","json","data","catch","err","console","log","beats","id","setTimeout","Rules","popup","setRulesPopup","rules","App","setUserPick","played","setPlayed","setScore","userStreak","setUserStreak","setTopstreak","rulesPopup","setPicks","point","w","headers","method","body","JSON","stringify","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","undefined"],"mappings":"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","file":"static/js/main.cc4009fa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.a4a2b39f.svg\";","\r\nimport {Winstreak} from \"../models\"\r\nimport \"../styles/stats.css\";\r\n\r\ntype Props = {\r\n    topstreak: Winstreak\r\n}\r\n\r\n//Component for displaying the longest win streak ever attained by anyone\r\n\r\nconst TopStreak = ({topstreak}: Props) => {\r\n\r\n    const streakText: string = \"LONGEST WIN STREAK\";\r\n\r\n    return (\r\n        <div className = \"Winstreak-Block\">\r\n                <div className = {[\"Stats-Label\", \"Winstreak-Label\"].join(\" \")}>{streakText}</div>\r\n                <div className = \"Stats-Number\">{topstreak?.streak}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopStreak","\r\nimport \"../styles/stats.css\";\r\n\r\ntype Props = {\r\n    score: number\r\n }\r\n\r\n //Component for displaying the user's current score\r\n\r\nconst Score = ({score}: Props) => {\r\n\r\n    const scoreText: string = \"SCORE\";\r\n\r\n    return (\r\n        <div className = \"Score-Block\">\r\n                <div className = \"Stats-Label\">{scoreText}</div>\r\n                <div className = \"Stats-Number\">{score}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Score","import logo from \"../assets/images/logo.svg\";\r\nimport TopStreak from \"./TopStreak\"\r\nimport Score from \"./Score\"\r\nimport { Winstreak } from \"../models\";\r\nimport \"../styles/header.css\";\r\n\r\ntype Props = {\r\n    score: number\r\n    topstreak: Winstreak\r\n }\r\n\r\n //Header component displays app icon, top streak, and user's score\r\n\r\nconst Header = ({score, topstreak}: Props) => {\r\n    return (\r\n        <div className = \"Header\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <TopStreak topstreak = {topstreak}/>\r\n            <Score score = {score}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","export default __webpack_public_path__ + \"static/media/bg-triangle.c0c30b56.svg\";","export default __webpack_public_path__ + \"static/media/icon-rock.476e90a9.svg\";","export default __webpack_public_path__ + \"static/media/icon-paper.8b57a6b1.svg\";","export default __webpack_public_path__ + \"static/media/icon-scissors.3b1a5d7e.svg\";","\r\nimport {Pick} from \"../models\"\r\nimport rockImg from \"../assets/images/icon-rock.svg\";\r\nimport paperImg from \"../assets/images/icon-paper.svg\";\r\nimport scissorsImg from \"../assets/images/icon-scissors.svg\";\r\nimport \"../styles/game.css\";\r\n\r\ntype Props = {\r\n    pick: Pick   \r\n }\r\n\r\n //Component for the pick graphic\r\n\r\nconst PickIcon = ({pick}: Props) => {\r\n\r\n    switch(pick?.name){\r\n        case \"rock\":\r\n            return (\r\n                <div className = {[\"Pick\", \"Rock\"].join(\" \")}>\r\n                    <img src={rockImg} alt={pick.name}/>\r\n                </div>\r\n            );\r\n        case \"paper\":\r\n            return (\r\n                <div className = {[\"Pick\", \"Paper\"].join(\" \")}>\r\n                    <img src={paperImg} alt={pick.name}/>\r\n                </div>\r\n            );\r\n        case \"scissors\":\r\n            return (\r\n                <div className = {[\"Pick\", \"Scissors\"].join(\" \")}>\r\n                    <img src={scissorsImg} alt={pick.name}/>\r\n                </div>\r\n            );\r\n        default:\r\n            return (\r\n                <div className = \"No-Pick\">\r\n                </div>\r\n            );\r\n    }\r\n    \r\n}\r\n\r\nexport default PickIcon","\r\nimport triangle from \"../assets/images/bg-triangle.svg\";\r\nimport \"../styles/game.css\";\r\nimport {Pick} from \"../models\";\r\nimport PickIcon from \"../components/PickIcon\";\r\nimport React from \"react\";\r\n\r\ntype Props = {\r\n   passUserPick: (pick: Pick) => void\r\n   picks: Pick[]  \r\n}\r\n\r\n//component where user plays the game, chooses rock/paper/scissors\r\n\r\nconst Game = ({passUserPick, picks}: Props) => {\r\n\r\n    //gets user's pick when choice is clicked\r\n    const shoot = (e: React.MouseEvent<HTMLElement>) => {\r\n        let name: string = (e.currentTarget as HTMLInputElement).getAttribute(\"data-value\")!;\r\n        picks.forEach((p: Pick) => {\r\n            if(p.name===name){\r\n                passUserPick(p);\r\n            }\r\n        });\r\n      }\r\n    \r\n    //Improvement for future (mentioned in Spring domain): have order for picks so they can be sorted and displayed dynamically\r\n    return (\r\n        <div className = \"Game\">\r\n            <div className = \"Top-Left-Triangle\">\r\n                <div className = \"Play-Button\" data-value={picks[1].name} onClick={(e: React.MouseEvent<HTMLElement>) => shoot(e)}>\r\n                    <PickIcon pick = {picks[1]} />\r\n                </div>\r\n            </div>\r\n            <div className = \"Top-Right-Triangle\">\r\n                <div className = \"Play-Button\" data-value={picks[2].name} onClick={(e: React.MouseEvent<HTMLElement>) => shoot(e)}>\r\n                    <PickIcon pick = {picks[2]} />\r\n                </div>\r\n            </div>\r\n            <img className = \"Triangle\" src={triangle} alt=\"triangle\"/>\r\n            <div className = \"Bottom-Triangle\">\r\n                <div className = \"Play-Button\" data-value={picks[0].name} onClick={(e: React.MouseEvent<HTMLElement>) => shoot(e)}>\r\n                    <PickIcon pick = {picks[0]} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game","\r\nimport \"../styles/results.css\";\r\n\r\ntype Props = {\r\n    result: String\r\n    reset: () => void\r\n }\r\n\r\n//Component for holding final results (Win/Loss/Tie) and Play Again Button\r\n\r\nconst EndResults = ({result, reset}: Props) => {\r\n\r\n    const winText: string = \"YOU WIN\";\r\n    const lossText: string = \"YOU LOSE\";\r\n    const tieText: string = \"TIE\";\r\n    const playAgainText: string = \"PLAY AGAIN\";\r\n\r\n    switch(result){\r\n        case \"Win\":\r\n            return (\r\n                <div className = \"Play-Again\">\r\n                    <div className = \"Winner-Header\">{winText}</div>\r\n                    <button className= {[\"Play-Again-Button\", \"Win-Tie-Text\"].join(\" \")} onClick={() => reset()}>{playAgainText}</button>\r\n                </div>\r\n            );\r\n        case \"Loss\":\r\n            return (\r\n                <div className = \"Play-Again\">\r\n                    <div className = \"Winner-Header\">{lossText}</div>\r\n                    <button className= {[\"Play-Again-Button\", \"Lose-Text\"].join(\" \")} onClick={() => reset()}>{playAgainText}</button>\r\n                </div>\r\n            );\r\n        case \"Tie\":\r\n            return (\r\n                <div className = \"Play-Again\">\r\n                    <div className = \"Winner-Header\">{tieText}</div>\r\n                    <button className= {[\"Play-Again-Button\", \"Win-Tie-Text\"].join(\" \")} onClick={() => reset()}>{playAgainText}</button>\r\n                </div>\r\n            );\r\n        default: return (<div></div>);\r\n    }\r\n}\r\n        \r\nexport default EndResults","import { useEffect, useState } from \"react\";\r\nimport {Pick} from \"../models\"\r\nimport \"../styles/game.css\";\r\nimport \"../styles/results.css\";\r\nimport PickIcon from \"../components/PickIcon\";\r\nimport EndResults from \"../components/EndResults\";\r\n\r\ntype Props = {\r\n    state: boolean\r\n    userPick: Pick\r\n    reset: () => void   \r\n    updateScore: (point: number) => void \r\n}\r\n\r\n//Component for displaying results with timed changes to the display\r\n\r\nconst Results = ({userPick, state, reset, updateScore}: Props) => {\r\n    const [cpuPick, setCpuPick] = useState(null as unknown as Pick);\r\n    const [result, setResult] = useState(null as unknown as string);\r\n    const [display, setDisplay] = useState(1);\r\n\r\n    const noPick: Pick = {id: 0, name: \"nopick\", beats: 0};\r\n    const waitTime: number = 1500;\r\n    const userPickText: string = \"YOU PICKED\";\r\n    const cpuPickText: string = \"THE HOUSE PICKED\";\r\n\r\n    //gets the House's pick from api\r\n    const getCPUPick = () => {\r\n        fetch(\"http://localhost:8080/cpuMove\").then((response) => \r\n            response.json()).then(data => {\r\n                setCpuPick(data)})\r\n                .catch(err => console.log(err));\r\n    }\r\n\r\n    const determineWinner = () => {\r\n        if(cpuPick!=null){\r\n            if(userPick.beats===cpuPick.id){\r\n                setResult(\"Win\");\r\n                updateScore(1);\r\n            }\r\n            else if(cpuPick.beats===userPick.id){\r\n                setResult(\"Loss\");\r\n                updateScore(-1);\r\n            }\r\n            else{\r\n                setResult(\"Tie\");\r\n                updateScore(0);\r\n            }\r\n        }\r\n    }\r\n    \r\n\r\n    //possibly unnecesary, but app slows down considerably if this useEffect is removed. Needs more investigation\r\n    useEffect(() => {\r\n        if(state){\r\n            getCPUPick();\r\n        }\r\n    }, [state])\r\n\r\n    //only begin the process of changing the display and ultimately determining winner once cpuPick is set\r\n    useEffect(() => {\r\n        setDisplay(1); \r\n    }, [cpuPick])\r\n\r\n    //timed display changes that end with determining the winner\r\n    useEffect(() => {\r\n        if (display===3){\r\n            determineWinner();\r\n        }\r\n        if(display<3){\r\n            setTimeout(() => {setDisplay(display+1);},waitTime);\r\n        }\r\n    }, [display])\r\n\r\n    return (\r\n        <div className = \"Results\">\r\n            <div className = \"User-Pick\">\r\n                <div className = \"Pick-Header\">{userPickText}</div> \r\n                <div id = \"userpick\" className = \"Pick-Display\">\r\n                    {(result===\"Win\")?<div className =\"Winner-Circle\"></div> :\"\"}\r\n                    <PickIcon pick = {userPick}/>\r\n                </div>\r\n            </div>\r\n\r\n            {(display===3)?\r\n                <EndResults result = {result} reset = {reset}/>\r\n            : \"\"}\r\n\r\n            <div className = \"House-Pick\">\r\n                <div className = \"Pick-Header\">{cpuPickText}</div> \r\n                <div id = \"cpupick\" className = \"Pick-Display\">\r\n                    {(result===\"Loss\")?<div className =\"Winner-Circle\"></div> :\"\"}\r\n                    <PickIcon pick = {(display>=2)? cpuPick: noPick}/>\r\n                </div>\r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Results","export default __webpack_public_path__ + \"static/media/image-rules.258b753f.svg\";","import rules from \"../assets/images/image-rules.svg\";\r\nimport \"../styles/rules.css\";\r\n\r\ntype Props = {\r\n    popup: boolean\r\n    setRulesPopup: (popup: boolean) => void\r\n }\r\n\r\n //Component for Rules popup\r\n\r\nconst Rules = ({popup, setRulesPopup}: Props) => {\r\n\r\n    const rulesText: string = \"RULES\";\r\n    const closeText: string = \"X\";\r\n\r\n    return (popup) ? (\r\n        <div className = \"Rules\">\r\n            <div className = \"Rules-Popup\">\r\n                <header className = \"Rules-Header\">{rulesText}</header>\r\n                <button className=\"Close-Button\" onClick = {() => setRulesPopup(false)}>{closeText}</button>\r\n                <img className = \"Rules-Image\" src = {rules} alt = \"rules\" />            \r\n            </div>\r\n        </div>\r\n    ) : <div></div>\r\n}\r\n\r\nexport default Rules","\nimport \"./styles/App.css\";\nimport Header from \"./components/Header\"\nimport Game from \"./components/Game\"\nimport Results from \"./components/Results\"\nimport { useEffect, useState } from \"react\";\nimport { Winstreak, Pick } from \"./models\";\nimport Rules from \"./components/Rules\";\n\n\nfunction App() {\n  const [userPick, setUserPick] = useState(null as unknown as Pick);\n  const [played, setPlayed] = useState(false as boolean);\n  const [score, setScore] = useState(0 as number);\n  const [userStreak, setUserStreak] = useState(0 as number);\n  const [topstreak, setTopstreak] = useState(null as unknown as Winstreak);\n  const [rulesPopup, setRulesPopup] = useState(false as boolean);\n  const [picks, setPicks] = useState(null as unknown as Pick[]);\n\n  const rulesBtnText: string = \"RULES\";\n\n  const passUserPick = (pick: Pick) => {\n    //possible issue with asynchronous functions here -- userPick might not be set by the time it's needed. Further investigation needed.\n    setPlayed(true);\n    setUserPick(pick);\n  }\n\n  const resetGame = () => {\n    setPlayed(false);\n  }\n\n  const updateUserScore = (point: number) => {\n    setScore(point+score);\n\n    //Only saving a new top Winstreak when user's streak is broken.\n    if(point===1){\n      setUserStreak(userStreak+1);\n    }\n    else{\n      if(userStreak>topstreak.streak){\n        let w: Winstreak = {\n          score: score,\n          streak: userStreak\n        };\n        fetch(\"http://localhost:8080/winstreaks\", {\n          headers: {\"content-type\": \"application/json\"},\n          method: \"POST\",\n          body: JSON.stringify(w)\n        }).catch(err => console.log(err));\n      }\n      setUserStreak(0);\n    }\n  }\n\n  //continuously fetch the most recent top winstreak\n  useEffect(() => {\n        fetch(\"http://localhost:8080/topWinstreak\").then((response) => \n        response.json()).then(data => {\n            setTopstreak(data);\n        }).catch(err => console.log(err));\n        }\n    );\n\n  //retrieve list of picks\n  useEffect(() => {\n    fetch(\"http://localhost:8080/picks\").then((response) => \n      response.json()).then(data => {\n        setPicks(data);\n      }).catch(err => console.log(err));\n  }, []);\n\n  return (\n    <div className=\"App\">\n        <Header score = {score} topstreak = {topstreak}/>\n        {picks? <div className = \"Game-Board\">\n                { played? <Results userPick= {userPick} state = {played} reset= {resetGame} updateScore = {updateUserScore}/>\n                : <Game passUserPick= {passUserPick} picks = {picks}/> }\n                </div> \n        : \"\"}\n        <Rules popup = {rulesPopup} setRulesPopup = {setRulesPopup}/>\n        <button className = \"Rules-Button\" onClick={() => setRulesPopup(true)}>{rulesBtnText}</button>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry: ReportHandler | undefined) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(undefined);\n"],"sourceRoot":""}